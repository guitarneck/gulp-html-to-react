# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Coveralls repo
.coveralls.yml

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# Mac Desktop Services Store file system
.DS_Store

# XCode workspace excluding
gulp-html-to-react.xcworkspace/
gulp-html-to-react.xcworkspace/xcuserdata/
UserInterfaceState.xcuserstate

###########################
# FIXING an existing XCODE repo
# _WHILE THE PROJECT IS CLOSED_...
# fix your gitignore file to exclude things you don't want to track in future
# then
# git rm --cached on each of the files in the repo that you need to remove from tracking
# single file...
# > git rm --cached ./test.xcodeproj/project.xcworkspace/xcuserdata/user.xcuserdatad/UserInterfaceState.xcuserstate 
# all files in a directory...
# > git rm --cached ./test.xcodeproj/project.xcworkspace/xcuserdata/user.xcuserdatad/*
# recursive directories...
# > git rm -r --cached ./test.xcodeproj/project.xcworkspace/xcuserdata/
#
# then git commit -m "cleaned repo" 
#
# (this is important - XCode will ignore your new exclusions 
# if you do not make a commandline commit before using XCode again)
#
# now you can use your project in XCode
